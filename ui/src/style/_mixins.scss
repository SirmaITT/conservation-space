/* All common mixins should go here. This stylesheet is imported in main.css */
@mixin styled-input {
  color: red;
}

@mixin padding-horizontal($padding) {
  padding-left: $padding;
  padding-right: $padding;
}

@mixin round-border($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}

@mixin rect-shape($width,$height) {
  width: $width;
  height: $height;
}

/* When a height is set on a tag, it might be useful the line-height to be set to that height too. This way the text inside the tag is properly positioned in the middle. */
@mixin equal-line-height($height) {
  height: $height;
  line-height: $height;
}

@mixin media-min-width($min-width, $width) {
  @media(min-width: $min-width) {
    width: $width;
  }
}

/**
 * Sets a font size according to given media screen width size.
 * $font-size-list: A list with font size units for every supported screen width. See the $screen-widths list variable.
 *                  If this argument is omited then the default font sizes will be applied.
 */
@mixin media-font-size($font-size-list: $default-font-sizes) {
  @for $i from 1 to length($screen-widths) {
    @media(max-width: nth($screen-widths, $i)) {
      font-size: nth($font-size-list, $i);
    }
  }
}

@mixin dtw-cell-padding() {
  padding: 6px 12px;
  @include word-wrap();
}

/* IE10+ CSS styles go here */
@mixin internet-explorer-11() {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content
  }
}

/* IE10+ and EDGE CSS styles go here */
@mixin internet-explorer-11-and-edge() {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content
  }
  @supports (-ms-ime-align:auto) {
    @content
  }
}

/* EDGE CSS styles go here */
@mixin edge() {
  @supports (-ms-ime-align:auto) {
    @content
  }
}

/* Safari 9+ (iOS Only!) */
@mixin safari9AndAbove() {
  @supports (overflow:-webkit-marquee) and (justify-content:inherit) {
    @content
  }
}

// firefox
@mixin firefox() {
  @-moz-document url-prefix() {
    @content
  }
}

@mixin max-dimensions($width, $height) {
  max-width: $width;
  max-height: $height;
}

@mixin word-wrap() {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

/* Ensures that an icon will stay within the provided dimension and scale. */
@mixin icon-dimensions($dimension) {
  height: $dimension;
  width: $dimension;
  display: flex;
  margin-right: 0.3em;
  margin-left: 0.5em;
  flex-shrink: 0;

  img {
    margin: auto;
    max-height: $dimension;
    max-width: $dimension;
  }

  @include internet-explorer-11-and-edge() {
    width: $dimension;
    line-height: $dimension;
    display: inline-block;
    text-align: center;

    img {
      max-width: $dimension;
      max-height: $dimension;
    }
  }
}

/**
 * Creates an area with a vertical scroll if the content is larger than the total height minus the provided
 * offset in vh units.
 */
@mixin scrollable-area($vertical-offset) {
  overflow-y: auto;
  max-height: calc(100vh - #{$vertical-offset});
  width: 100%;
}

@mixin tooltip($tooltip-color, $tooltip-background-color, $tooltip-font-size, $tooltip-width: 200px) {
  &:not([data-tooltip=""]):hover:after {
    position: absolute;
    width: $tooltip-width;
    content: attr(data-tooltip);

    color: $tooltip-color;
    background-color: $tooltip-background-color;
    text-align: center;
    font-size: $tooltip-font-size;
    padding: 3px 8px;
    border-radius: 4px;

    white-space: normal;
    @include word-wrap();
    opacity: 1;
    animation: opacityTimer 3s;
    @content;
  }

  @keyframes opacityTimer {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 0.5;
    }
    100% {
      opacity: 1;
    }
  }
}