//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.07.24 at 07:56:17 PM EEST
//

package com.sirma.itt.emf.definition.model.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for objectType.
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * 
 * <pre>
 * &lt;simpleType name="objectType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="case"/>
 *     &lt;enumeration value="task"/>
 *     &lt;enumeration value="workflow"/>
 *     &lt;enumeration value="workflowtask"/>
 *     &lt;enumeration value="object"/>
 *     &lt;enumeration value="section"/>
 *     &lt;enumeration value="document"/>
 *     &lt;enumeration value="comment"/>
 *     &lt;enumeration value="link"/>
 *     &lt;enumeration value="project"/>
 *     &lt;enumeration value="user"/>
 *     &lt;enumeration value="group"/>
 *     &lt;enumeration value="topic"/>
 *     &lt;enumeration value="imageAnnotation"/>
 *     &lt;enumeration value="dashlet"/>
 *     &lt;enumeration value="folder"/>
 *     &lt;enumeration value="query"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@XmlType(name = "objectType")
@XmlEnum
public enum ObjectType {

	/** The case. */
	@XmlEnumValue("case")
	CASE("case"),

	/** The task. */
	@XmlEnumValue("task")
	TASK("task"),

	/** The workflow. */
	@XmlEnumValue("workflow")
	WORKFLOW("workflow"),

	/** The workflowtask. */
	@XmlEnumValue("workflowtask")
	WORKFLOWTASK("workflowtask"),

	/** The object. */
	@XmlEnumValue("object")
	OBJECT("object"),

	/** The section. */
	@XmlEnumValue("section")
	SECTION("section"),

	/** The document. */
	@XmlEnumValue("document")
	DOCUMENT("document"),

	/** The comment. */
	@XmlEnumValue("comment")
	COMMENT("comment"),

	/** The link. */
	@XmlEnumValue("link")
	LINK("link"),

	/** The project. */
	@XmlEnumValue("project")
	PROJECT("project"),

	/** The user. */
	@XmlEnumValue("user")
	USER("user"),

	/** The group. */
	@XmlEnumValue("group")
	GROUP("group"),

	/** The topic. */
	@XmlEnumValue("topic")
	TOPIC("topic"),

	/** The image annotation. */
	@XmlEnumValue("imageAnnotation")
	IMAGE_ANNOTATION("imageAnnotation"),

	/** The dashlet. */
	@XmlEnumValue("dashlet")
	DASHLET("dashlet"),

	/** The folder. */
	@XmlEnumValue("folder")
	FOLDER("folder"),

	/** The query. */
	@XmlEnumValue("query")
	QUERY("query");

	/** The value. */
	private final String value;

	/**
	 * Instantiates a new object type.
	 * 
	 * @param v
	 *            the v
	 */
	ObjectType(String v) {
		value = v;
	}

	/**
	 * Value.
	 * 
	 * @return the string
	 */
	public String value() {
		return value;
	}

	/**
	 * From value.
	 * 
	 * @param v
	 *            the v
	 * @return the object type
	 */
	public static ObjectType fromValue(String v) {
		for (ObjectType c : ObjectType.values()) {
			if (c.value.equals(v)) {
				return c;
			}
		}
		throw new IllegalArgumentException(v);
	}

}
