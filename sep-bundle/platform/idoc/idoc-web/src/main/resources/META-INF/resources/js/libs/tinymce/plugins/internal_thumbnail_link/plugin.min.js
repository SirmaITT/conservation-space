tinymce.PluginManager.add("internal_thumbnail_link", function(editor) { 
	
	var data = { };
	var insertType = null;
	var title = null;
	
	var insertLinkHandler = function() {
		// save cursor position
    	editor.nodeChanged();
    	
    	var uploadInEmptyObject;
    	if(typeof idoc != 'undefined') {
    		uploadInEmptyObject = idoc.isNewObject();
    	} else {
    		uploadInEmptyObject = false;
    	}
    	if(typeof idoc != 'undefined' && typeof idoc.object.id == 'undefined') {
    		uploadInEmptyObject = false;
    	}
    	
    	var data = { };
    	var div = $('<div><div>');
    	div.objectPicker({
    		popup: true,
    		labels: {
    			popupTitle: title,
    			okBtn: _emfLabels["save"],
    			cancelBtn: window._emfLabels["cancel"]
    		},
    		locationOptionsReload		: EMF.applicationPath + '/service/search/basic',
			objectTypeOptionsLoader		: EMF.applicationPath + '/service/definition/all-types',
			objectRelationOptionsLoader	: EMF.applicationPath + '/service/definition/relationship-types',
			searchTemplateUrl			: EMF.applicationPath + '/search/basic-search.tpl.html',
			searchUsersUrl				: EMF.applicationPath + '/service/search/users',
			search						: EMF.applicationPath + '/service/search/basic',
			applicationPath				: EMF.applicationPath,
			singleSelection 			: true,
    		browserConfig		: {
    			changeRoot			: true,
        		allowSelection		: true,
        		singleSelection		: true,
        		allowRootSelection 	: true,
        		filters				: "instanceType!='sectioninstance'"
            },
			uploadConfig : {
					isNewObject		: uploadInEmptyObject,
		    		browserConfig		: {
		    			changeRoot			: false,
		        		allowSelection		: true,
		        		singleSelection		: true,
		        		allowRootSelection 	: false,
		        		filters				: "(instanceType=='sectioninstance'&&purpose==null)||(instanceType=='documentinstance'&&purpose=='iDoc')||(instanceType=='objectinstance')"
		            }
			},
			selectDeselectCallback		: function(item) {
				data = item.currentSelection;
			},
			browserSelectDeselectCallback	: function(item) {
				data = item.currentSelection;
			},
			uploadSelectDeselectCallback : function(item) {
				data = item.currentSelection;
			},
			dialogConfig : {
				okBtnClicked				: function() {
					if (data.dbId) {
						var insertNode = null;
						if (insertType === 'thumbnail') {
							var anchorHtml = '<a href="' + EMF.bookmarks.buildLink(data.type, data.dbId) + '" data-instance-id="'+ data.dbId +'" data-instance-type="'+ data.type +'" class="instance-link internal-thumbnail"></a>';
							if(data.icon) {
								var imgHtml = '<img class="header-icon" src="' + data.icon + '"/>';
							} else {
								var imgHtml = '<img width="100" class="header-icon" src="' + EMF.applicationPath + '/content/' + data.dbId + '"/>';
							}
							insertNode = $(anchorHtml).append($(imgHtml));
							
							var title = $('<div class="object-picker">'+data.default_header+'</div>').find("a");
							$(insertNode).append(title[0]); 

						} else {
							
							// FIXME: do not rely on header - it might not have the link!!!
							//get link to object from generated object header
							insertNode = $('<div class="object-picker">'+data.default_header+'</div>').find("a");
							$(insertNode[0]).attr('data-instance-id', data.dbId);
							$(insertNode[0]).attr('data-instance-type', data.type); 
							$(insertNode[0]).addClass("internal-link instance-link"); 
						}
						 
						var node = editor.selection.getNode();
					    var tmp = $(node);
					    
					    // TODO: find out why link at comment can not be inserted on the right position
					    if(editor.id == 'mce_0') {
					    	tmp.append(insertNode);
					    } else {
						    var placeholderId = EMF.util.generateUUID();
				            if ($.browser.msie && $.browser.version == "10.0") {
				            	tmp.append('<span id="' + placeholderId + '"></span>');
				            } else {
				            	editor.insertContent('<span id="' + placeholderId + '"></span>');
				            }
			
						    var editorElement = $('#' + editor.id); 
							var placeholder = editorElement.find('#' + placeholderId);
							placeholder.append(insertNode);
							insertNode.unwrap();
					    }
						 
					    editor.selection.select(tmp[0]);
					    editor.selection.collapse();
					}
				} 
			},
			onBeforeSearch				: EMF.search.onBeforeSearchHandler,
			defaultCheckedMetaFields	: ['emf-search-context-current-project']
    	});
	};

	editor.addButton('internal_thumbnail_link', {
		icon : "thumbnail-picker",
		title : "Insert thumbnail",
        onclick: function() {
        	data = { };
        	insertType = 'thumbnail';
        	title = 'Internal thumbnail link';
        	insertLinkHandler();
        }
    });
	
	editor.addButton('internal_link', {
		icon : "picker",
		title : "Insert link",
        onclick: function() {
        	data = { };
        	insertType = 'link';
        	title = 'Internal link';
        	insertLinkHandler();
        }
    });
});