tinymce.PluginManager.add("svgEditIntegration", function(editor) {
	
	var destroyEditor = function() {
		editor.hide();
		editor.destroy();
		editor.remove();
		$('#' + editor.id).parent().remove();
	}

	editor.addButton('insertEditorAsImage', {
		text: "Done",
        onclick: function() {
        	var editorElement = $('#' + editor.id);
        	html2canvas(editorElement, {
        		onrendered: function(canvas) {
        			var dataUrl 	= canvas.toDataURL();
        			var initalText 	= $('#' + editor.id).html(),
                	editorWidth   = editorElement.width(),
                	editorHeight  = editorElement.height();
        			
        			var image = editor.svgEdit.createImageFn({														//TOOL ANNOTATION
    			    	"element": "image",															//TOOL ANNOTATION
    			    	"attr": {																//TOOL ANNOTATION
    				    	"id": editor.svgEdit.nextId,													//TOOL ANNOTATION
    				    	"x": editor.svgEdit.mousex,
    				    	"y": editor.svgEdit.mousey,
    				    	"width": editorWidth,															//TOOL ANNOTATION
    				    	"height": editorHeight,
    				    	"xlink:href": dataUrl											//TOOL ANNOTATION
    					}																//TOOL ANNOTATION
    			    });																		//TOOL ANNOTATION
    			    
        			if (editor.svgEdit.oldImageElement.length) {
        				var topic = editor.svgEdit.svgSpace.getTopicByShapeId(editor.svgEdit.nextId);
        				if (topic) {
        					
        					// wut?! FIXME
        					var element = $(topic.shape.svgTag);
        					element.attr('xlink:href', dataUrl);
        					element.attr('width', editorWidth);
        					element.attr('height', editorHeight);
        					topic.shape.svgTag = $('<div />').append(element).html().replace('<img ', '<image ').replace(/"/g, '\'') + '</image>';
        					topic.content = initalText;
        					$.ajax({
        						type : 'PUT',
        						contentType : 'application/json',
        						url : EMF.servicePath + '/topics/' + topic.Id,
        						data : JSON.stringify(topic),
        						complete : function(res) {
        							$(document).trigger('iat:dom:redraw-annotations');
        							destroyEditor();
        						}
        				    });
        				}
        			} else {
        				editor.svgEdit.svgSpace.callCustomFuction(image, initalText);
        				destroyEditor();
        			}
        		}
        	});
        }
    });
	
	editor.addButton('cancelInsertEditorAsImage', {
		text: "Cancel",
        onclick: function() {
        	destroyEditor();
        	$('#'+editor.svgEdit.nextId).show();
        }
    });
});