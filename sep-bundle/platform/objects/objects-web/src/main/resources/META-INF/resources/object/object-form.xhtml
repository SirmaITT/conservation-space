<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html">

	<div class="item-selector-panel-wrapper object-type-toolbar">
		<ui:include src="/common/select-one.xhtml">
			<ui:param name="renderCondition"
				value="#{instanceUtil.isNotPersisted(objectInstance) and (objectLandingPage.definitionItems.size() >= 1)}" />
			<ui:param name="selectorLabel" value="#{label['genericobject.objectTypeMenu.menu']}:" />
			<ui:param name="activatorLinkValue" value="#{label['genericobject.objectTypeMenu.defaultLabel']}" />
			<ui:param name="itemsList" value="#{objectLandingPage.definitionItems}" />
			<ui:param name="action" value="#{objectLandingPage}" />
			<ui:param name="allowClear" value="false" />
			<ui:param name="menuClass" value="objects-type-selector" />
		</ui:include>

		<script type="text/javascript">
			// if request contains autoselect parameter, we use request parameters to initialize the object type selector
			// end we trigger change to load the object form 
			$(function() {
				var params = $.deparam(location.search);
				var autoselect = params.autoselect;
				if(autoselect &amp;&amp; !EMF.objectTypeSelected) {
					var definitionType = params.definitionType;
					// set flag that we are already done with auto selection to prevent infinite loop
					EMF.objectTypeSelected = true;
					$('.items-list-dropdown').select2("val", definitionType).trigger('change');
				}
			});
		</script>
	</div>

	<h:panelGroup id="buttonsPanel" layout="block" rendered="#{objectInstance == null}">
		<div class="buttons-panel new-object-buttons">
			<h:commandButton id="cancelButton" action="backward" styleClass="btn btn-default standard-button blockUI"
				value="#{label['cmf.btn.cancel']}" immediate="true" />
		</div>
	</h:panelGroup>

	<h:panelGroup id="objectView" rendered="#{(objectInstance != null)}">
		<ui:include src="/idoc-details.xhtml" />
	</h:panelGroup>

</ui:composition>
