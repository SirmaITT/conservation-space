<?xml version="1.0"?>
<definition id="ciaDocument" type="document" parentId="documentAllActions" isAbstract="true">
	<fields>
		<field name="default_header" type="ANY" label="DOCUMENT_DEFAULT_HEADER_CIA" />
		<field name="compact_header" type="an..4096" label="DOCUMENT_COMPACT_HEADER_CIA"/>
		<field name="breadcrumb_header" type="an..4096" label="DOCUMENT_BREADCRUMB_HEADER_CIA" />
		<field name="tooltip_header" type="an..4096" label="DOCUMENT_TOOLTIP_HEADER_CIA" />
		
		<!-- all properties from the generic definition will be organized in regions --> 
 		<field name="identifier" type="an..180" displayType="system" />
		<field name="type" type="an..180" displayType="system" />
		<field name="title" type="an..150" displayType="system" />
		<field name="status"  type="an..35" displayType="system" />
		<field name="description" displayType="system" />
		<field name="createdOn" type="dateTime" displayType="system" />
		<field name="createdBy" type="uri" displayType="system" />
		<field name="modifiedOn" type="dateTime" displayType="system" />
		<field name="modifiedBy" type="uri" displayType="system" />
		<field name="name" type="an..180" displayType="system" />
		<field name="size" type="n..10" displayType="system" />
		<field name="mimetype" type="an..20" displayType="system" />
		<field name="emf:version" type="an..10" displayType="system" />
		<field name="emf:revisionNumber" type="an..10" displayType="system" />
		<field name="lockedBy" type="uri" displayType="system" />
		<field name="parentOf" type="uri" displayType="system" />
		<field name="hasParent" type="uri" displayType="system" />
		<field name="outcome" type="an..50" displayType="system" />
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="integrated" type="boolean" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="hasRevision" type="uri" displayType="system" />
		<field name="isRevisionOf" type="uri" displayType="system" />
		<field name="lastPublishedRevision" type="uri" displayType="system" />
		<field name="lastRevision" type="uri" displayType="system" />
		<field name="nextRevision" type="uri" displayType="system" />
		<field name="previousRevision" type="uri" displayType="system" />
		<field name="partOf" type="uri" displayType="system" />
		<field name="hasChild" type="uri" displayType="system" />
	</fields>
	 
	<regions>	
		<region id="generalDocumentDetails" displayType="editable" order="10" label="cia.generalDocumentDetails.region.label">
			<fields>
				<field name="title" type="an..1000" mandatory="true" displayType="editable" order="115" label="cia.title.label" tooltip="cia.title.tooltip" dmsType="cm:title" uri="dcterms:title" />
				<field name="description" type="an..1024" displayType="editable" order="130" label="cia.description.label" tooltip="cia.description.tooltip" previewEmpty="false" dmsType="cm:description" uri="dcterms:description" />
				<field name="documents" type="uri" displayType="editable" order="135" label="cia.documents.label" tooltip="cia.documents.tooltip" multiValued="true" previewEmpty="false" uri="chc:documents" >
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject</control-param>
					</control>
				</field>
				<field name="hasAssignedConservator" type="uri" displayType="editable" order="140" label="cia.hasAssignedConservator.label" tooltip="cia.hasAssignedConservator.tooltip" multiValued="true" previewEmpty="false" uri="cia:hasAssignedConservator" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="hasTutor" type="uri" displayType="editable" order="141" label="cia.hasTutor.label" tooltip="cia.hasTutor.tooltip" multiValued="true" previewEmpty="false" uri="cia:hasTutor" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="hasReviewer" type="uri" displayType="editable" order="142" label="cia.hasReviewer.label" tooltip="cia.hasReviewer.tooltip" multiValued="true" previewEmpty="false" uri="cia:hasReviewer" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="approvedBy" type="uri" displayType="editable" order="145" label="cia.approvedBy.label" tooltip="cia.approvedBy.tooltip" multiValued="true" previewEmpty="false" uri="chc:approvedBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
			</fields>
		</region>
		<region id="systemData" displayType="editable" order="20" label="cia.systemData.region.label">
			<fields>
				<field name="type" type="an..50" displayType="readonly" codelist="CL210" order="210" label="cia.type.label" tooltip="cia.type.tooltip" dmsType="emf:type" uri="emf:type" />  			
				<field name="identifier" type="an..50" displayType="readOnly" order="215" label="cia.identifier.label" tooltip="cia.identifier.tooltip" rnc="${eval(DC${seq({+dcSequence})})}" uri="dcterms:identifier"/>
				<field name="name" type="an..180" displayType="readonly" order="216" label="cia.name.label" tooltip="cia.name.tooltip" rnc="[^|\\/*:&lt;&gt;\&quot;?]{1,180}$" previewEmpty="false" uri="emf:fileName" />
				<field name="mimetype" type="an..20" displayType="readOnly" codelist="CL215" order="217" label="cia.mimetype.label" tooltip="cia.mimetype.tooltip"  previewEmpty="false" dmsType="-cm:content.mimetype" uri="emf:mimetype"/>
				<field name="size" type="n..10"  displayType="readonly" order="218" label="cia.size.label" tooltip="cia.size.tooltip" previewEmpty="false" uri="emf:size" >
					<control id="BYTE_FORMAT" />
				</field>
				<field name="status" type="an..50" displayType="readOnly" codelist="CL8" order="220" label="cia.status.label" tooltip="cia.status.tooltip" previewEmpty="false" dmsType="emf:status" uri="emf:status" >
					<value>DRAFT</value>
				</field>
				<field name="emf:version" type="an..10" displayType="readOnly" order="225" label="cia.version.label" tooltip="cia.version.tooltip" dmsType="FORBIDDEN" uri="emf:version"/> 
				<!-- object properties (relationships) -->
				<field name="createdOn" type="dateTime" displayType="readOnly" order="230" label="cia.createdOn.label" tooltip="cia.createdOn.tooltip" dmsType="-cm:created" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" order="235" label="cia.createdBy.label" tooltip="cia.createdBy.tooltip" dmsType="-cm:creator" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" order="240" label="cia.modifiedOn.label" tooltip="cia.modifiedOn.tooltip" previewEmpty="false" dmsType="-cm:modified"  uri="emf:modifiedOn"/>
				<field name="modifiedBy" type="uri" displayType="readOnly" order="245" label="cia.modifiedBy.label" tooltip="cia.modifiedBy.tooltip" previewEmpty="false" dmsType="-cm:modifier" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readonly" order="250" label="cia.lockedBy.label" tooltip="cia.lockedBy.tooltip" dmsType="FORBIDDEN" previewEmpty="false">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="hasThumbnail" type="uri" displayType="readonly" order="265" label="cia.hasThumbnail.label" tooltip="cia.hasThumbnail.tooltip" mandatory="false" multiValued="true" previewEmpty="false" uri="emf:hasThumbnail" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" order="270" label="cia.hasAttachment.label" tooltip="cia.hasAttachment.tooltip" mandatory="false" multiValued="true" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,cia:Survey</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" order="275" label="cia.attachmentOf.label" tooltip="cia.attachmentOf.tooltip" mandatory="false" multiValued="true" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,cia:Survey</control-param>
					</control>
				</field>
				<field name="hasWatcher" type="uri" displayType="editable" order="280" label="cia.hasWatcher.label" tooltip="cia.hasWatcher.tooltip" mandatory="false" multiValued="true" previewEmpty="false" uri="emf:hasWatcher" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="parentOf" type="uri" displayType="readOnly" order="295" label="cia.parentOf.label" tooltip="cia.parentOf.tooltip" mandatory="false" multiValued="true" previewEmpty="false" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,cia:Survey,emf:User</control-param>
					</control>
				</field>
				<field name="hasParent" type="uri" displayType="readOnly" order="300" label="cia.hasParent.label" tooltip="cia.hasParent.tooltip" mandatory="false" previewEmpty="false" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,cia:Survey,emf:User</control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" order="400" label="cia.partOf.label" tooltip="cia.partOf.tooltip" multiValued="true" previewEmpty="false" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" order="410" label="cia.hasChild.label" tooltip="cia.hasChild.tooltip" multiValued="true" previewEmpty="false" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
			</fields>
		</region>
		<region id="ciaDocRevisions" order="30" displayType="editable" label="cia.revisions.region.label">
			<fields>
				<field name="hasRevision" type="uri" displayType="readonly" order="300" label="cia.hasRevision.label" tooltip="cia.hasRevision.tooltip" multiValued="true" previewEmpty="false" uri="emf:hasRevision" >
					<control id="PICKER"/>
				</field>
				<field name="isRevisionOf" type="uri" displayType="readonly" order="305" label="cia.isRevisionOf.label" tooltip="cia.isRevisionOf.tooltip" previewEmpty="false" uri="emf:isRevisionOf" >
					<control id="PICKER"/>
				</field>
				<field name="lastPublishedRevision" type="uri" displayType="readonly" order="310" label="lastPublishedRevision.label" tooltip="cia.lastPublishedRevision.tooltip" previewEmpty="false" uri="emf:lastPublishedRevision" >
					<control id="PICKER"/>
				</field>
				<!-- this field is added to template, if you want to use just remove a comment
				<field name="lastRevision" type="uri" displayType="readonly" order="315" label="lastRevision.label" tooltip="cia.lastRevision.tooltip" previewEmpty="false" uri="emf:lastRevision" >
					<control id="PICKER"/>
				</field> -->
				<field name="nextRevision" type="uri" displayType="readonly" order="320" label="nextRevision.label" tooltip="cia.nextRevision.tooltip" previewEmpty="false" uri="emf:nextRevision" >
					<control id="PICKER"/>
				</field>
				<field name="previousRevision" type="uri" displayType="readonly" order="325" label="previousRevision.label" tooltip="cia.previousRevision.tooltip" previewEmpty="false" uri="emf:previousRevision" >
					<control id="PICKER"/>
				</field>
			</fields>
		</region>	
	</regions>
	
	<transitions>	
		<transition id="editDetails" order="10" />
		<transition id="uploadNewVersion" order="11" />
		<transition id="sendForReview" order="12" label="cia.sendForReview.action.label" tooltip="cia.sendForReview.action.tooltip" eventId="sendForReview" purpose="transition" immediate="true" confirmation="sendForReview.confirm">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[
							var type = codelist.getDescription(210, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Sent for review) ' + type +': ' + title;

							//extract watchers, conservators and reviewer
 							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var conservators = root.get('hasAssignedConservator');
							var reviewer = root.get('hasReviewer');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							if (watchers != null) {
							 for(i = 0; i < watchers.length; i++) {
							  	recipients.push(watchers[i].toString());
							   }
							}
							if(conservators != null) {
							   for (i = 0; i < conservators.length; i++) {
							   recipients.push(conservators[i].toString());
							   }
							}
							if(reviewer != null) {
							   for (i = 0; i < reviewer.length; i++) {
							   recipients.push(reviewer[i].toString());
							   }
							}
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_sentForReview_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="publish" order="13" tooltip="cia.publish.action.tooltip" confirmation="publish.confirm" />
		<transition id="publishAsPdf" order="14" tooltip="cia.publishAsPdf.action.tooltip" confirmation="publishAsPdf.confirm" />
		<transition id="approve" order="15" label="cia.approve.action.label" tooltip="approve.tooltip" eventId="approve" purpose="transition" immediate="true" confirmation="approve.confirm">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[
							var type = codelist.getDescription(210, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Approved) ' + type +': ' + title;

							//extract watchers, conservators, reviewer and approved by
 							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var conservators = root.get('hasAssignedConservator');
							var reviewer = root.get('hasReviewer');
							var approvedBy = root.get('approvedBy');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							if (watchers != null) {
							 for(i = 0; i < watchers.length; i++) {
							  	recipients.push(watchers[i].toString());
							   }
							}
							if(conservators != null) {
							   for (i = 0; i < conservators.length; i++) {
							   recipients.push(conservators[i].toString());
							   }
							}
							if(reviewer != null) {
							   for (i = 0; i < reviewer.length; i++) {
							   recipients.push(reviewer[i].toString());
							   }
							}
							if(approvedBy != null) {
							   for (i = 0; i < approvedBy.length; i++) {
							   recipients.push(approvedBy[i].toString());
							   }
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_approve_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="sendForUpdate" order="16" label="cia.sendForUpdate.action.label" tooltip="cia.sendForUpdate.action.tooltip" eventId="sendForUpdate" purpose="transition" immediate="true" confirmation="sendForUpdate.confirm">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[
							var type = codelist.getDescription(210, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Sent for update) ' + type +': ' + title;

							//extract watchers, conservators and reviewer
 							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var conservators = root.get('hasAssignedConservator');
							var reviewer = root.get('hasReviewer');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							if (watchers != null) {
							 for(i = 0; i < watchers.length; i++) {
							  	recipients.push(watchers[i].toString());
							   }
							}
							if(conservators != null) {
							   for (i = 0; i < conservators.length; i++) {
							   recipients.push(conservators[i].toString());
							   }
							}
							if(reviewer != null) {
							   for (i = 0; i < reviewer.length; i++) {
							   recipients.push(reviewer[i].toString());
							   }
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_sendForUpdate_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="addAttachment" order="17" label="cia.addAttachment.action.label" tooltip="cia.addAttachment.action.tooltip" eventId="addAttachment" purpose="addRelation">
			<fields>
				<field name="attachToConfig" type="an10">
					<value>
						{
							"predefinedTypes" : ["emf:Project","cia:Survey","emf:Document","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample"],
							"selection" : "multiple",
							"relation" : ["chc:hasAttachment"],
							"implicitParams" : {
							"removeExisting" : false
							}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="createWorkflow" order="18" label="cia.createWorkflow.action.label" tooltip="cia.createWorkflow.action.tooltip" eventId="createWorkflow" purpose="createInstance">
      		<fields>
				<field name="createDocConfig" type="an10">
					<value>
						{ 
							"predefinedTypes" : ["emf:BusinessProcess"],
							"predefinedSubTypes" : ["CIAWFLTYPE01"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="print" order="20" />
		<transition id="printTab"  order="21" />
		<transition id="exportPDF" order="22" />
		<transition id="exportTabPDF" order="23" />
		<transition id="exportWord" order="24" />
		<transition id="exportTabWord" order="25" />			
		<transition id="download" order="26" />
		<transition id="move" order="30" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[
							var type = codelist.getDescription(210, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Moved) ' + type +': ' + title;

							//extract watchers and conservators
							var watchers = root.get('hasWatcher');
							var conservators = root.get('hasAssignedConservator');
							var createdBy = root.get('createdBy');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							if (watchers != null) {
							 for(i = 0; i < watchers.length; i++) {
							  	recipients.push(watchers[i].toString());
							   }
							}
							if(conservators != null) {
							   for (i = 0; i < conservators.length; i++) {
							   recipients.push(conservators[i].toString());
							   }
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="clone" order="35" />
		<transition id="lock" order="40" />
		<transition id="unlock" order="45" />
		<transition id="addWatcher" order="50" label="cia.addWatcher.action.label" tooltip="addWatchers.tooltip" eventId="addWatcher" purpose="addRelation">
			<fields>
				<field name="addAttachmentConfig" type="an10">
					<value>						
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"implicitParams" : {
								"removeExisting" : false
							}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" order="60" />	
		<transition id="saveAsTemplate" order="65" />
		<transition id="revertVersion" order="70" label="cia.revertVersion.action.label" tooltip="cia.revertVersion.action.tooltip" confirmation="revert.confirmation" />
		<transition id="managePermissions" order="75" />
		<transition id="delete" order="100" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[
							var type = codelist.getDescription(210, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Deleted) ' + type +': ' + title;

							//extract watchers and conservators
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var conservators = root.get('hasAssignedConservator');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							if (watchers != null) {
							 for(i = 0; i < watchers.length; i++) {
							  	recipients.push(watchers[i].toString());
							   }
							}
							if(conservators != null) {
							   for (i = 0; i < conservators.length; i++) {
							   recipients.push(conservators[i].toString());
							   }
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>
		
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="DRAFT"/>
		<stateTransition from="INIT" transition="clone" to="DRAFT"/>

		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="sendForReview" to="PENDING_APPROVAL">
				<condition id="requiredFields" renderAs="REQUIRED">[hasReviewer]</condition>
		</stateTransition>
		
		<stateTransition from="DRAFT" transition="uploadNewVersion" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="addAttachment" to="DRAFT" />
		<stateTransition from="DRAFT" transition="print" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="printTab" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportTabPDF" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportPDF" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportWord" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportTabWord" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="download" to="DRAFT"/>		
		<stateTransition from="DRAFT" transition="move" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="clone" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="lock" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="addWatcher" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
		<stateTransition from="DRAFT" transition="saveAsTemplate" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="revertVersion" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="createWorkflow" to="DRAFT" />
		<stateTransition from="DRAFT" transition="createInContext" to="DRAFT"/>
		
		<stateTransition from="APPROVED" transition="publish" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:latestRevision</condition>
		</stateTransition>
		<stateTransition from="APPROVED" transition="publish" to="DRAFT"/>
		<stateTransition from="APPROVED" transition="publishAsPdf" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:latestRevision</condition>
		</stateTransition>
		<stateTransition from="APPROVED" transition="publishAsPdf" to="DRAFT"/>		
		
		<stateTransition from="PENDING_APPROVAL" transition="approve" to="APPROVED">
			<condition id="requiredFields" renderAs="REQUIRED">[approvedBy]</condition>
		</stateTransition>
		<stateTransition from="PENDING_APPROVAL" transition="editDetails" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="sendForUpdate" to="DRAFT"/>
		<stateTransition from="PENDING_APPROVAL" transition="uploadNewVersion" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="addAttachment" to="PENDING_APPROVAL" />
		<stateTransition from="PENDING_APPROVAL" transition="print" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="printTab" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="exportTabPDF" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="exportPDF" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="exportWord" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="exportTabWord" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="download" to="PENDING_APPROVAL"/>		
		<stateTransition from="PENDING_APPROVAL" transition="move" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="clone" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="lock" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="unlock" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="addWatcher" to="PENDING_APPROVAL" />
		<stateTransition from="PENDING_APPROVAL" transition="addThumbnail" to="PENDING_APPROVAL" />
		<stateTransition from="PENDING_APPROVAL" transition="revertVersion" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="saveAsTemplate" to="PENDING_APPROVAL"/>
		<stateTransition from="PENDING_APPROVAL" transition="managePermissions" to="PENDING_APPROVAL" />
		<stateTransition from="PENDING_APPROVAL" transition="createInContext" to="PENDING_APPROVAL"/>
		
		<stateTransition from="APPROVED" transition="print" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="printTab" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportTabPDF" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportPDF" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportWord" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportTabWord" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="download" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="clone" to="APPROVED" >
			<condition renderAs="PROPERTY" id="emf:revisionType"/>
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:current</condition>
		</stateTransition>
		<stateTransition from="APPROVED" transition="managePermissions" to="APPROVED" />
		<stateTransition from="APPROVED" transition="createInContext" to="APPROVED"/>
		
		<stateTransition from="OBSOLETE" transition="print" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="exportPDF" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="printTab" to="OBSOLETE" />
        <stateTransition from="OBSOLETE" transition="exportTabPDF" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="exportWord" to="OBSOLETE" /> 
		<stateTransition from="OBSOLETE" transition="exportTabWord" to="OBSOLETE" /> 
		<stateTransition from="OBSOLETE" transition="download" to="OBSOLETE"/>
		<stateTransition from="OBSOLETE" transition="managePermissions" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="createInContext" to="OBSOLETE"/>
		
		<stateTransition from="DRAFT" transition="delete" to="DELETED"/>
		<stateTransition from="*" transition="delete" to="DELETED" />
		<stateTransition from="*" transition="obsolete" to="OBSOLETE" />	
	</stateTransitions>

	<labels>
		<label id="DOCUMENT_TOOLTIP_HEADER_CIA">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-mimetype="${get([mimetype])}" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-title="title">${get([title])}</span>
                        </a>
                    </span>
					<span class="tooltip-row">
                        <label>Type: </label>
                        <span data-property="type">${CL([type])}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Version: </label>
                        <span data-property="emf:version">${get([emf:version])}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>System modified By: </label>
                        <span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>System modified On: </label>
                        <span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                </span>
            )}]]></value>
		</label>	
		<label id="DOCUMENT_DEFAULT_HEADER_CIA">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.contentSize=${if(${get([size], 0)} <> 0).then(${get([size])}).else(${get([fileSize])})}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
				${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span>
						<span data-property="type">${CL([type])}</span>&nbsp;
						(<span data-property="status">${CL([status])}</span>)
					</span>
					<br />
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							<span>(</span>Published revision:<span data-property="revisionNumber">${get([emf:revisionNumber])}</span>)&nbsp;
						)}
						<span data-property="title">${get([title])}</span>
					</a>
					${if(${get([mimetype])}<>null).then(&nbsp;Mimetype: <span data-property="mimetype">${CL([mimetype])}</span>)}
					${if(${get([size])}<>null).then(,&nbsp;Size: <span data-property="size">${getReadableFormat(${var.contentSize})}</span>)}
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([isRevisionOf])}<>null).then(<br />Revision of:<span data-property="isRevisionOf">${objectProperty(${get([isRevisionOf])})}</span>)}
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}		
				</span>)}]]>
			</value>
		</label>
        <label id="DOCUMENT_COMPACT_HEADER_CIA">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
				${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							<span data-property="revisionNumber">(Published revision:${get([emf:revisionNumber])})</span>&nbsp;
						)}
						<span data-property="title">${get([title])}</span>
					</a>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>)}]]>
			</value>
		</label>	
		<label id="DOCUMENT_BREADCRUMB_HEADER_CIA">
            <value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
				${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							<span data-property="revisionNumber">(Published revision:${get([emf:revisionNumber])})</span>&nbsp;
						)}
						<span data-property="title">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
		</label>
	</labels>
</definition>
