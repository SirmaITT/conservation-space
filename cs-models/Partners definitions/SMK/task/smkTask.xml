<?xml version="1.0" ?>
<definition id="smkTask" parentId="standaloneCommonTask" standalone="true" type="task">
	<fields>
		<field name="default_header" type="ANY" label="TASK_DEFAULT_HEADER_SMK" />
		<field name="compact_header" type="an..4096" label="TASK_COMPACT_HEADER_SMK" />
		<field name="breadcrumb_header" type="an..4096" label="TASK_BREADCRUMB_HEADER_SMK" />
		<field name="tooltip_header" type="an..4096" label="TASK_TOOLTIP_HEADER_SMK" />

		<field name="identifier" type="an..50" displayType="system" />
		<field name="type" 	type="an..20" displayType="system" />
		<field name="title" type="an..1024" displayType="system" />
		<field name="status" type="an..20" displayType="system"/>
		<field name="description" type="an..1000" displayType="system"/>
		<field name="createdOn" type="datetime" displayType="system" />
		<field name="createdBy"	type="uri" displayType="system" />
		<field name="modifiedOn" type="datetime" displayType="system"/>
		<field name="modifiedBy" type="uri" displayType="system"/>
		<field name="assignee" type="uri" displayType="system"/>		
		<field name="priority" type="an..20" displayType="system"/>
		<field name="plannedStartDate" type="dateTime" displayType="system"/>
		<field name="plannedEndDate" type="dateTime" displayType="system"/>
		<field name="parentOf" type="uri" displayType="system"/>
		<field name="hasParent" type="uri" displayType="system"/>
		<field name="hasThumbnail" type="uri" displayType="system"/>
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="outcome" type="an..50" displayType="system" />
		<field name="integrated" type="boolean" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="partOf" type="uri" displayType="system" />
		<field name="hasChild" type="uri" displayType="system" />
	</fields>
	<regions>	
		<region id="generalData" displayType="editable" order="10" label="smk.generalData.region.label">
			<fields>
				<field name="subType" type="an..180" mandatory="true" displayType="editable" codelist="CL243" order="110" label="smk.subType.label" tooltip="smk.subType.tooltip" uri="smk:subType" />
				<field name="title" type="an..1000" displayType="editable" mandatory="true" order="115" label="smk.title.label" tooltip="smk.title.tooltip" dmsType="cm:title" uri="dcterms:title" />
				<field name="description" type="an..1024" displayType="editable" order="125" label="smk.description.label" tooltip="smk.description.tooltip" previewEmpty="false" dmsType="cm:description" uri="dcterms:description" />
				<field name="assignee" type="uri" displayType="editable" order="135" label="smk.assignee.label" tooltip="smk.assignee.tooltip" mandatory="true" previewEmpty="false" dmsType="bpm:assignee" uri="emf:hasAssignee">
					<condition id="readonlyFields" renderAs="READONLY">[status] NOTIN ('NEW')</condition>
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
					<value>${currentUser.id}</value>
				</field>
				<field name="priority" type="an..20" codelist="CL208" displayType="editable" order="140" label="smk.priority.label" tooltip="smk.priority.tooltip" dmsType="bpm:priority" rnc="${to.dmsConvert(CL208,value,extra1)}|${from.dmsConvert(CL208,extra1,value)}" uri="emf:priority"/>
				<field name="plannedStartDate" type="date"  displayType="editable" order="145" label="smk.plannedStartDate.label" tooltip="smk.plannedStartDate.tooltip" dmsType="FORBIDDEN" uri="emf:plannedStartDate">
					<value>${today}</value>
				</field>
				<field name="plannedEndDate" type="date" displayType="editable" order="150" label="smk.plannedEndDate.label" tooltip="smk.plannedEndDate.tooltip" previewEmpty="false" dmsType="bpm:dueDate" uri="emf:plannedEndDate"/>
			</fields>
		</region>
		<region id="systemData" displayType="editable" order="20" label="smk.systemData.region.label">
			<fields>
				<field name="type" type="an..50" codelist="CL3"  displayType="readonly" order="210" label="smk.type.label" tooltip="smk.type.tooltip" dmsType="emf:type" uri="emf:type" >
					<value>FC236003</value>
				</field>  			
				<field name="identifier" type="an..50" displayType="readOnly" order="215" label="smk.identifier.label" tooltip="smk.identifier.tooltip"  rnc="${eval(TS${seq({+tsSequence})})}" uri="dcterms:identifier">
					<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
				</field>
				<field name="status" type="an..50" displayType="readOnly" codelist="CL102" order="220" label="smk.status.label" tooltip="smk.status.tooltip"  previewEmpty="false" dmsType="emf:status" uri="emf:status" >
					<condition id="hiddenFieldStatus" renderAs="HIDDEN">[status] IN ('NEW')</condition>
				</field>
				<field name="emf:version" type="an..10" displayType="readOnly" order="225" label="smk.version.label" tooltip="smk.version.tooltip" dmsType="FORBIDDEN" uri="emf:version"/> 
				<!-- object properties (relationships) -->
				<field name="createdOn" type="dateTime" displayType="readOnly" order="230" label="smk.createdOn.label" tooltip="smk.createdOn.tooltip" dmsType="-cm:created" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" order="235" label="smk.createdBy.label" tooltip="smk.createdBy.tooltip" dmsType="-cm:creator" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" order="240"  label="smk.modifiedOn.label" tooltip="smk.modifiedOn.tooltip" previewEmpty="false" dmsType="-cm:modified"  uri="emf:modifiedOn"/>
				<field name="modifiedBy" type="uri" displayType="readOnly" order="245" label="smk.modifiedBy.label" tooltip="smk.modifiedBy.tooltip" previewEmpty="false" dmsType="-cm:modifier" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readonly" order="250" label="smk.lockedBy.label" tooltip="smk.lockedBy.tooltip" dmsType="FORBIDDEN" previewEmpty="false">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="hasThumbnail" type="uri" displayType="readOnly" order="255" label="smk.hasThumbnail.label" tooltip="smk.hasThumbnail.tooltip" multiValued="true" previewEmpty="false" uri="emf:hasThumbnail" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
					<condition id="readonlyFields" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" order="260" label="smk.hasAttachment.label" tooltip="smk.hasAttachment.tooltip" multiValued="true" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,emf:Case,chc:Exhibition</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" order="265" label="smk.attachmentOf.label" tooltip="smk.attachmentOf.tooltip" multiValued="true" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,emf:Case,chc:Exhibition</control-param>
					</control>
				</field>
				<field name="hasWatcher" type="uri" displayType="editable" order="270" label="smk.hasWatcher.label" tooltip="smk.hasWatcher.tooltip" multiValued="true" previewEmpty="false" uri="emf:hasWatcher" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="parentOf" type="uri" displayType="readonly" order="275" label="smk.parentOf.label" tooltip="smk.parentOf.tooltip" multiValued="true" previewEmpty="false" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,emf:Case,emf:User,chc:Exhibition</control-param>
					</control>
				</field>
				<field name="hasParent" type="uri"  displayType="readonly" order="280" label="smk.hasParent.label" tooltip="smk.hasParent.tooltip" previewEmpty="false" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,emf:Case,emf:User,chc:Exhibition</control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" order="405"  label="smk.partOf.label" tooltip="smk.partOf.tooltip"  multiValued="true" previewEmpty="false" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" order="410" label="smk.hasChild.label" tooltip="smk.hasChild.tooltip"  multiValued="true" previewEmpty="false" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
			</fields>
		</region>
	</regions>
	<transitions>
		<transition id="create" eventId="create" purpose="create">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[

							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(New assignment) Task: ' + subType + ' - ' + title;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_assignee_object_smk", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>	
		</transition> 
		<transition id="editDetails" order="10" />
		<transition id="start" order="11" tooltip="smk.start.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Started) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_start_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="suspend" order="12" tooltip="smk.suspend.action.tooltip" confirmation="suspend.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[						
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Suspended) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_suspend_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="restart" order="13" tooltip="smk.restart.action.tooltip" confirmation="restart.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Restarted) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_restart_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="stop" order="14" tooltip="smk.stop.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Stopped) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_stop_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="complete" order="15" tooltip="smk.complete-task.tooltip" confirmation="complete.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Completed) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complate_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="reassign" order="16" confirmation="reassign.confirm" >
			<fields>
				<field name="beforeReasing" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[
							//add to context old assignee
							context.put('previousAsignee', root.get('assignee'));
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
				<field name="onAssignTask" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Reassigned) Task: ' + subType + ' - ' + title;
							
							//extract watchers
							var recipients = [];
							var watchers = root.get('hasWatcher');
							if(watchers != null){
								for(var i = 0; i < watchers.length; i++){
								log.info("Watch " + watchers[i].toString());
								recipients.push(watchers[i].toString());
								}
							}
							//extract assignee, createdBy and old assignee
							recipients.push(root.get('assignee').toString());
							recipients.push(root.get('createdBy').toString());
							recipients.push(context.get('previousAsignee'));
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reassigned_object_smk", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">false</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="addAttachment" order="20" label="smk.addAttachment.action.label" tooltip="smk.addAttachment.action.tooltip" eventId="addAttachment" purpose="addRelation">
			<fields>
				<field name="addAttachmentConfig" type="an10">
					<value>
							{
								"predefinedTypes" : ["emf:Project","emf:Case","emf:Document","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","chc:Exhibition"],
								"selection" : "multiple",
								"relation" : ["chc:hasAttachment"],
								"implicitParams" : {
								"removeExisting" : false
								}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" order="25" label="smk.addThumbnail.action.label"/>	
		<transition id="addWatcher" order="30" label="smk.addWatcher.action.label" tooltip="smk.addWatcher.action.tooltip"  eventId="addWatcher" purpose="addRelation">
			<fields>
				<field name="addWatcherConfig" type="an10">
					<value>						
							{
								"predefinedTypes" : ["emf:User"],
								"selection" : "multiple",
								"relation" : ["emf:hasWatcher"],
								"implicitParams" : {
									"removeExisting" : false
								}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="createSubTask" order="31" label="smk.createSubTask.action.label" tooltip="nga.createSubTask.action.tooltip" eventId="createSubTask" purpose="createInstance">
      		<fields>
				<field name="createSubTaskConfig" type="an10">
					<value>
						{ 
							"predefinedTypes" : ["emf:Task"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="printTab" order="35" label="smk.printTab.action.label" />
		<transition id="print" order="40" label="smk.print.action.label"  />
		<transition id="exportTabPDF" order="45"  label="smk.exportTabPDF.action.label" />
		<transition id="exportPDF" order="50" label="smk.exportPDF.action.label" />
		<transition id="exportTabWord" order="55" label="smk.exportTabWord.action.label" />
		<transition id="exportWord" order="60"  label="smk.exportWord.action.label" />
		<transition id="download" order="65" />
		<transition id="move" order="70" label="smk.move.action.label" confirmation="move.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Moved) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_smk", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="clone" order="75" label="smk.clone.action.label" eventId="clone" purpose="clone" tooltip="clone.tooltip" confirmation="clone.confirm" />

		<transition id="lock" order="80" />
		<transition id="unlock" order="85" />
		<transition id="saveAsTemplate" order="90" label="smk.saveAsTemplate.action.label"/>			
		<transition id="managePermissions" order="95" label="smk.managePermissions.action.label"/>

		<transition id="delete" order="100" label="delete.label" tooltip="smk.delete.tooltip" eventId="delete" purpose="delete" confirmation="project_delete.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" mandatory="false">
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(243, root.get('subType'), 'en');
							var title = root.get('title');
							var subject = '(Deleted) Task: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients[i+1] = createdBy.toString();
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_smk", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>	 

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NEW" />
		<stateTransition from="INIT" transition="clone" to="APPROVED"/>

		<stateTransition from="NEW" transition="create" to="APPROVED" />

		<!-- approved-->
		<stateTransition from="APPROVED" transition="editDetails" to="APPROVED" />
		<stateTransition from="APPROVED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="APPROVED" transition="stop" to="STOPPED" />
		<stateTransition from="APPROVED" transition="reassign" to="APPROVED" />
		<stateTransition from="APPROVED" transition="addAttachment" to="APPROVED" />
		<stateTransition from="APPROVED" transition="addThumbnail" to="APPROVED" />	
		<stateTransition from="APPROVED" transition="addWatcher" to="APPROVED"/> 	
		<stateTransition from="APPROVED" transition="move" to="APPROVED"/>	
		<stateTransition from="APPROVED" transition="clone" to="APPROVED"/>					
		<stateTransition from="APPROVED" transition="print" to="APPROVED" />
		<stateTransition from="APPROVED" transition="printTab" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportTabPDF" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportPDF" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportWord" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="exportTabWord" to="APPROVED"/>
		<stateTransition from="APPROVED" transition="saveAsTemplate" to="APPROVED" />
		<stateTransition from="APPROVED" transition="lock" to="APPROVED" />
		<stateTransition from="APPROVED" transition="unlock" to="APPROVED" />
		<stateTransition from="APPROVED" transition="managePermissions" to="APPROVED" />
		<stateTransition from="APPROVED" transition="createSubTask" to="APPROVED" />
		<stateTransition from="APPROVED" transition="createInContext" to="APPROVED" />	
		<stateTransition from="APPROVED" transition="delete" to="DELETED"/> 

		<!-- in progress-->
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED" />
		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD" />
		<stateTransition from="IN_PROGRESS" transition="complete" to="COMPLETED" />
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />		
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />	
		<stateTransition from="IN_PROGRESS" transition="addWatcher" to="IN_PROGRESS"/> 
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/> 
		<stateTransition from="IN_PROGRESS" transition="clone" to="IN_PROGRESS"/>			
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS"/>		
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createSubTask" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS" />	

		<!-- on hold-->
		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<stateTransition from="ON_HOLD" transition="stop" to="STOPPED" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addAttachment" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="addWatcher" to="ON_HOLD"/> 
		<stateTransition from="ON_HOLD" transition="print" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD"/>	
		<stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="clone" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="createSubTask" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="createInContext" to="ON_HOLD" />	
		
		<!-- stopped-->
		<stateTransition from="STOPPED" transition="print" to="STOPPED" />
		<stateTransition from="STOPPED" transition="printTab" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportPDF" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportWord" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="clone" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="managePermissions" to="STOPPED" />
		<!-- complate-->
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="clone" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />

	</stateTransitions>
	<labels>	
		<label id="TASK_TOOLTIP_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-type="${CL([type])}">${CL([type])}</span> 
                        </a>
                    </span>
					<span class="tooltip-row">
                        <label>Sub-type: </label>
                        <span data-property="subType">${CL([subType])}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Status: </label>
                        <span data-property="status">${CL([status])}</span>
                    </span>
					${if(${get([priority])}<>null).then(
						<span class="tooltip-row">
							<label>Priority: </label>
							<span data-property="priority">${CL([priority])}</span>
						</span>
					)}	
					${if(${get([plannedStartDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planned start date: </label>
							<span data-property="plannedStartDate">${date([plannedStartDate]).format(dd.MM.yyyy)}</span>
						</span>
					)}	
					${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planned end date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate]).format(dd.MM.yyyy)}</span>
						</span>
					)}	
                </span>
            )}]]></value>
		</label>
		<label id="TASK_DEFAULT_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>&nbsp;
						(<span data-property="status">${CL([status])}</span>)
					</span>
					<br />
					<span data-property="type">${CL([type])}</span>:&nbsp;
					<span data-property="subType">${CL([subType])}</span>
					${if(${get([priority])} <> null).then(,&nbsp;Priority:&nbsp;<span>${CL([priority])}</span>)}
					${if(${get([plannedEndDate])} <> null).then(,&nbsp;Planned&nbsp;end&nbsp;date:&nbsp;<span>${date([plannedEndDate]).format(dd.MM.yyyy)}</span>)}
					,&nbsp;Assigned&nbsp;to:&nbsp;<a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</a>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}		
				</span>
			)}]]></value>
		</label>
		<label id="TASK_COMPACT_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span> 
						</a>,&nbsp;
						${if(${get([plannedEndDate])} <> null).then(Planned&nbsp;end&nbsp;date:&nbsp;<span>${date([plannedEndDate]).format(dd.MM.yyyy)}</span>&nbsp;)}
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>)}]]>
			</value>
		</label>	
		<label id="TASK_BREADCRUMB_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(
            ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			<span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
					<span data-property="title">${get([title])}</span> 
				</a>
			</span>		
            )}]]></value>
		</label>		
	</labels>		
</definition>
