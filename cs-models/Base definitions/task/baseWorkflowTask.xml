<?xml version="1.0" ?>
<definition id="baseWorkflowTask" dmsType="cmfwf:standaloneTask" type="task" isAbstract="true">
	<fields>
		<!-- headers and tooltip -->
		<field name="default_header" type="ANY" label="STANDALONE_TASK_DEFAULT_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
		<field name="compact_header" type="an..4096" label="STANDALONE_TASK_COMPACT_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
		<field name="breadcrumb_header" type="an..4096" label="STANDALONE_TASK_BREADCRUMB_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
		<field name="tooltip_header" type="an..4096" label="STANDALONE_TASK_TOOLTIP_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />

		<!-- system fields -->
		<field name="emf:isDeleted" type="boolean"  displayType="system" uri="emf:isDeleted" dmsType="FORBIDDEN"><value>false</value></field>
		<field name="emf:isActive"  type="boolean"  displayType="system" uri="emf:isActive" dmsType="FORBIDDEN" />
		<field name="rdf:type" type="URI" displayType="system" uri="rdf:type" dmsType="FORBIDDEN">
			<value>http://ittruse.ittbg.com/ontology/enterpriseManagementFramework#Task</value>
		</field>
		<field name="activityId" type="an..180" label="activityId.label" displayType="system" uri="emf:activityId" />
	    <field name="transitionMatrix" type="an..1024" label="transitionMatrix.label" displayType="system" uri="emf:transitionMatrix" />
		<field name="outcome" type="an..50" codelist="CL9" displayType="readOnly" label="outcome.label" previewEmpty="false" uri="emf:outcome" />
		<field name="taskNotes" type="an..1024" label="taskNotes.label" displayType="system" uri="emf:taskNotes" />
		<field name="integrated" type="boolean" label="integrated.label" displayType="hidden" uri="emf:integrated">
			<value>false</value>
		</field>
		<!-- general fields for each primary object -->
		<field name="identifier" 	type="an..50" label="uniqueIdentifier.label" mandatory="false" displayType="readOnly" dmsType="emf:identifier" rnc="${eval(${get([identifier]).from(rootContext)}-${seq({+${get([identifier]).from(rootContext)}})})}" uri="dcterms:identifier">
			<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
		</field>
		<field name="type" 			type="an..20" codelist="CL227" label="standaloneCommonTask.type" mandatory="false" displayType="hidden" dmsType="emf:type" uri="emf:type"/>
		<field name="title" 		type="an..1024" label="standaloneCommonTask.Name" mandatory="true" displayType="editable" dmsType="cm:name" uri="dcterms:title"/>
		<field name="status" 		type="an..20" codelist="CL102" label="status.label"  mandatory="false" displayType="readOnly"  previewEmpty="false" dmsType="emf:status" uri="emf:status">
			<condition id="hiddenFieldStatus" renderAs="HIDDEN">[status] IN ('NEW')</condition>
		</field>
		<field name="description" 	type="an..1000" label="standaloneCommonTask.description" displayType="editable" dmsType="cm:description" uri="dcterms:description"/>
		<field name="createdOn" 	type="datetime" label="standaloneCommonTask.startedOn" displayType="readOnly" previewEmpty="false" dmsType="-bpm:startDate" uri="emf:createdOn">
			<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
		</field>
		<field name="createdBy"		type="uri" label="standaloneCommonTask.startedBy" displayType="readonly" previewEmpty="false" dmsType="-cm:creator" uri="emf:createdBy">
			<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
			<control id="PICKER">
	    		<control-param id="range" name="range">emf:User</control-param>
	    	</control>
	    </field>		
		<field name="modifiedOn" 	type="datetime" label="modifiedOn.label" displayType="readonly" dmsType="-cm:modified" uri="emf:modifiedOn">
			<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
		</field>
		<field name="modifiedBy"  	type="uri" label="modifiedBy.label" displayType="readonly" dmsType="-cm:modifier" uri="emf:modifiedBy">
			<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
			<control id="PICKER">
				<control-param id="range" name="range">emf:User</control-param>
			</control>
	    </field>
	    <field name="completedOn" type="datetime" displayType="hidden" label="completedOn.label" previewEmpty="false" dmsType="-cm:completed" uri="emf:completedOn" />
		<field name="priority" 		type="an..20" codelist="CL208" label="standaloneCommonTask.priority" mandatory="false" displayType="editable" dmsType="bpm:priority" rnc="${to.dmsConvert(CL208,value,extra1)}|${from.dmsConvert(CL208,extra1,value)}" uri="emf:priority"/>
		<field name="plannedStartDate" type="dateTime" label="plannedStartDate.label" displayType="editable" dmsType="FORBIDDEN" uri="emf:plannedStartDate"/>
		<field name="plannedEndDate" type="dateTime" label="plannedEndDate.label" displayType="editable" dmsType="bpm:dueDate" uri="emf:plannedEndDate"/>
		
		<!-- standalone task fields -->
		<field name="assignee" 		type="uri" label="assignee" mandatory="false" displayType="editable" previewEmpty="false" dmsType="bpm:assignee" uri="emf:hasAssignee">
			<condition id="readonlyFields" renderAs="READONLY">[status] NOTIN ('NEW')</condition>
			<control id="PICKER">
				<control-param id="range" name="range">emf:User</control-param>
			</control>
		</field>
		<field name="parentOf" type="uri" label="parentOf" mandatory="false" displayType="readOnly" multiValued="true" previewEmpty="false" uri="emf:parentOf" >
			<control id="PICKER">
				<control-param id="range" name="range">emf:Project,emf:Case,emf:Document,emf:Audio,emf:Video,emf:Image,emf:Task,emf:User,emf:Group</control-param>
			</control>
		</field>
		<field name="hasParent" type="uri" label="hasParent" mandatory="false" displayType="readOnly" multiValued="true" previewEmpty="false" uri="emf:hasParent" >
			<control id="PICKER">
				<control-param id="range" name="range">emf:Project,emf:Case,emf:Document,emf:Audio,emf:Video,emf:Image,emf:Task,emf:User,emf:Group</control-param>
			</control>
		</field>
		<field name="partOf" type="uri" label="partOf.label" mandatory="false" displayType="system" multiValued="true" previewEmpty="false" uri="ptop:partOf" >
     		<control id="PICKER">
      			<control-param id="range" name="range"></control-param>
     		</control>
    	</field>
    	<field name="hasChild" type="uri" label="hasChild.label" mandatory="false" displayType="system" multiValued="true" previewEmpty="false" uri="emf:hasChild" >
     		<control id="PICKER">
      			<control-param id="range" name="range"></control-param>
     		</control>
    	</field>  
		<field name="hasThumbnail" type="uri" label="hasThumbnail" mandatory="false" displayType="readOnly" previewEmpty="false" uri="emf:hasThumbnail" >
			<control id="PICKER">
				<control-param id="range" name="range">emf:Image</control-param>
			</control>
		</field>
		<field name="hasTemplate" type="uri" label="hasTemplate" mandatory="false" displayType="system" multiValued="false" previewEmpty="false" uri="emf:hasTemplate"/>
		<field name="isPoolAssigneeTo" type="uri" label="isPoolAssigneeTo" displayType="readOnly" previewEmpty="false" multiValued="true" uri="emf:isPoolAssigneeTo" />			
	</fields>
	<transitions>
		<transition id="restart" label="restart.label" eventId="restart" purpose="transition" immediate="true" tooltip="restart.tooltip" />
		<transition id="start" label="start.label" eventId="start" purpose="transition" immediate="true" tooltip="start.tooltip" />
		<transition id="claim" label="claim.label" eventId="claim" purpose="bpmClaim" immediate="true" tooltip="claim.tooltip" />
		<transition id="release" label="release.label" eventId="release" purpose="bpmRelease" immediate="true" tooltip="release.tooltip" />
		<transition id="suspend" label="suspend.label" eventId="suspend" purpose="transition" immediate="true" tooltip="suspend.tooltip" />
		<transition id="stop" label="stop.label" eventId="stop" purpose="transition" immediate="true" confirmation="confirmation.action" tooltip="stop.tooltip" />
		<transition id="editDetails" label="editDetails.label" eventId="editDetails" purpose="editDetails" tooltip="editDetails.tooltip" />
		<transition id="move" label="move.label" eventId="move" purpose="move" tooltip="move.tooltip" /> 
		<transition id="addThumbnail" label="addThumbnail.label" eventId="addThumbnail" purpose="addThumbnail" tooltip="addThumbnail.tooltip" />		
		<transition id="saveAsTemplate" label="saveAsTemplate.label" eventId="saveAsTemplate" purpose="saveAsTemplate" tooltip="saveAsTemplate.tooltip" />	
		<transition id="lock" label="lock.label" eventId="lock" purpose="lock" tooltip="lock.tooltip" />
		<transition id="unlock" label="unlock.label" eventId="unlock" purpose="unlock" tooltip="unlock.tooltip" />
		<transition id="print" label="print.label" eventId="print" purpose="print" tooltip="print.tooltip" />
		<transition id="printTab" label="printTab.label" eventId="printTab" purpose="printTab" tooltip="printTab.tooltip" />
		<transition id="exportTabPDF" label="exportTabPDF.label" eventId="exportTabPDF" purpose="exportTabPDF" tooltip="exportTabPDF.tooltip" />
		<transition id="exportPDF" label="exportPDF.label" eventId="exportPDF" purpose="exportPDF" tooltip="exportPDF.tooltip" />
      	<transition id="exportWord" label="exportWord.label" eventId="exportWord" purpose="exportWord" tooltip="exportWord.tooltip" />
	   	<transition id="exportTabWord" label="exportTabWord.label" eventId="exportTabWord" purpose="exportTabWord" tooltip="exportTabWord.tooltip" />
		<transition id="managePermissions" label="managePermissions.label" eventId="managePermissions" purpose="managePermissions" tooltip="managePermissions.tooltip" />
		<transition id="createInContext" eventId="createInContext" purpose="createInContext" label="createInContext.label" displayType="hidden" />
		<transition id="reassign" label="reassign.label" eventId="reassign" purpose="addRelation" tooltip="reassign.tooltip">
			<fields>
	 			<field name="attachToConfig" type="an10">
	 				<value>
	 					{
							"predefinedTypes" : ["emf:User"],
							"selection" : "single",
							"relation" : ["emf:hasAssignee"],
							"implicitParams" : {
								"removeExisting" : true
			  				}
						}
	 				</value>
	 				<control id="configuration" />
	 			</field>
				<field name="onAssignTask" type="an10">
					<value> 
						<![CDATA[
							var recipients = [root.get('assignee')];
							mail.sendNotifications(root, security.getCurrentLoggedUser(), "Task is assigned", "email_task_assign", recipients, null);
							log.info("Mail is send.");
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">false</control-param>							
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
	 		</fields>
	 	</transition>

	</transitions>

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NEW" />
		<stateTransition from="NEW" transition="create" to="NOT_YET_STARTED" />
		
		<stateTransition from="NOT_YET_STARTED" transition="claim" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="stop" to="STOPPED" />
		<stateTransition from="NOT_YET_STARTED" transition="suspend" to="ON_HOLD" />	
		<stateTransition from="NOT_YET_STARTED" transition="move" to="NOT_YET_STARTED"/>             
		<stateTransition from="NOT_YET_STARTED" transition="addThumbnail" to="NOT_YET_STARTED" />		        
		<stateTransition from="NOT_YET_STARTED" transition="saveAsTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="lock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="unlock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="print" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="printTab" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="reassign" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="managePermissions" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="createInContext" to="NOT_YET_STARTED"/>
		
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="claim" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="release" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED" />
		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD" />	
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>           
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />	       
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />			
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />			
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS" />	
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS"/>

		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<stateTransition from="ON_HOLD" transition="stop" to="STOPPED" />		
		<stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>	           
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />       
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="print" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />

		<stateTransition from="*" transition="delete" to="DELETED" />
		<stateTransition from="*" transition="stop" to="STOPPED" />
	</stateTransitions>
	<labels>
		<label id="STANDALONE_TASK_TOOLTIP_HEADER">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-uid="${id.uid}">${id.uid} </span> 
                            <span data-title="${get([title])}">${get([title])}</span> 
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>
                        </a>
                    </span>
                    <span class="tooltip-row">
                        <label>Assignee(s): </label>
                        <span data-property="assignee">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Started: </label>
                        <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Completed: </label>
                        <span data-property="endTime">${date([endTime]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Total hours logged: </label>
                        <span data-property="timespent">${=${get([actualEffort])}/60}</span>
                    </span>
                </span>
            )}]]></value>
			<value lang="bg"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-uid="${id.uid}">${id.uid} </span> 
                            <span data-title="${get([title])}">${get([title])}</span> 
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>
                        </a>
                    </span>
                    <span class="tooltip-row">
                        <label>Участници: </label>
                        <span data-property="assignee">${if(${user(${get([assignee])})}==null).then(неразпределена).else(${user(${get([assignee])})})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Стартирана: </label>
                        <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Приключена: </label>
                        <span data-property="endTime">${date([endTime]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Общо работено време: </label>
                        <span data-property="timespent">${=${get([actualEffort])}/60}</span>
                    </span>
                </span>
            )}]]></value>
		</label>
		<label id="STANDALONE_TASK_DEFAULT_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
            <span><img src="${thumbnailUri(64)}"/></span>
            <span data-property="assignee">
                <span class="truncate-element">
                    <a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
                        <b>
                            ${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span> )}
                            <span data-property="uid">${id.uid}</span>&nbsp;
                            <span data-property="title">${get([title])}</span>&nbsp;
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
                        </b>
                    </a>
                </span>
				<br />
                изпълнител: <a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(неразпределена).else(${user(${get([assignee])})})}</a>,&nbsp;
                създадена на: <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span> 
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
            <span><img src="${thumbnailUri(64)}"/></span>
            <span data-property="assignee">
                <span class="truncate-element">
                    <a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
                        <b>
                            ${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span> )}
                            <span data-property="uid">${id.uid}</span>&nbsp;
                            <span data-property="title">${get([title])}</span>&nbsp;
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
                        </b>
                    </a>
                </span>
				<br />
                Assigned to: <a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</a>,&nbsp;
                Created on: <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span> 
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
		</label>
		<label id="STANDALONE_TASK_COMPACT_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
            <span><img src="${thumbnailUri(16)}"/></span>
            ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span class="truncate-element">
				<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span> )}
					<span data-property="uid">${id.uid}</span>&nbsp;
					<span data-property="title">${get([title])}</span>&nbsp;
					<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
            <span><img src="${thumbnailUri(16)}"/></span>
            ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span class="truncate-element">
				<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span> )}
					<span data-property="uid">${id.uid}</span>&nbsp;
					<span data-property="title">${get([title])}</span>&nbsp;
					<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
		</label>
		<label id="STANDALONE_TASK_BREADCRUMB_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span>
				<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span> )}
					<span data-property="title">${get([title])}</span> 
				</a>
			</span>)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span>
				<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span> )}
					<span data-property="title">${get([title])}</span> 
				</a>
			</span>)}]]></value>
		</label>
		<label id="standaloneCommonTask.emfId">
			<value lang="bg">Номер</value>
			<value lang="en">Id</value>
		</label>
		<label id="standaloneCommonTask.description">
			<value lang="bg">Описание</value>
			<value lang="en">Description</value>
		</label>
		<label id="standaloneCommonTask.type">
			<value lang="bg">Тип</value>
			<value lang="en">Type</value>
		</label>
		<label id="assignee.standalonetask.triggerBtn.title">
			<value lang="bg">Избери потребител</value>
			<value lang="en">Select</value>
		</label>
		<label id="assignee.standalonetask.okBtn.title">
			<value lang="bg">Избери</value>
			<value lang="en">Save</value>
		</label>
		<label id="assignee.standalonetask.cancelBtn.title">
			<value lang="bg">Откажи</value>
			<value lang="en">Cancel</value>
		</label>
		<label id="assignee.standalonetask.picklistHeader.title">
			<value lang="bg">Избере потребител</value>
			<value lang="en">Select user</value>
		</label>
		<label id="standaloneCommonTask.message">
			<value lang="bg">Коментар</value>
			<value lang="en">Comment</value>
		</label>
		<label id="standaloneCommonTask.Name">
			<value lang="bg">Наименование</value>
			<value lang="en">Title</value>
		</label>
		<label id="standaloneCommonTask.priority">
			<value lang="bg">Приоритет</value>
			<value lang="en">Priority</value>
		</label>
		<label id="standaloneCommonTask.owner">
			<value lang="bg">Собственик</value>
			<value lang="en">Owner</value>
		</label>
		<label id="standaloneCommonTask.start.btn.title">
			<value lang="bg">Старт</value>
			<value lang="en">Commit</value>
		</label>
		<label id="standaloneCommonTask.cancel.btn.title">
			<value lang="bg">Отмени</value>
			<value lang="en">Cancel</value>
		</label>
		<label id="standaloneCommonTask.transitionOutcome">
			<value lang="bg">Резултат</value>
			<value lang="en">Outcome</value>
		</label>
		<label id="standaloneCommonTask.startedOn">
			<value lang="bg">Създадена на</value>
			<value lang="en">Created on</value>
		</label>
		<label id="standaloneCommonTask.startedBy">
			<value lang="bg">Създадена от</value>
			<value lang="en">Creator</value>
		</label>
		<label id="standaloneCommonTask.completedOn">
			<value lang="bg">Приключена на</value>
			<value lang="en">Completed on</value>
		</label>
		<label id="standaloneCommonTask.completedBy">
			<value lang="bg">Приключена от</value>
			<value lang="en">Completed by</value>
		</label>
		<label id="standaloneCommonTask.subtasks">
			<value lang="bg">Подзадачи</value>
			<value lang="en">Sub-tasks</value>
		</label>
		<label id="standaloneCommonTask.actualEffort">
			<value lang="bg">Действителни работни часове</value>
			<value lang="en">Actual Effort</value>
		</label>
		<label id="standaloneCommonTask.logWorkRegion">
			<value lang="bg">Отчитане на отработено време</value>
			<value lang="en">Log work</value>
		</label>
		<label id="standaloneCommonTask.logWorkWidget.title">
			<value lang="bg">Отчитане на отработено време</value>
			<value lang="en">Log work on task</value>
		</label>
		<label id="standaloneTask.createTask.btn.title">
			<value lang="bg">Създаване на под-задача</value>
			<value lang="en">Create Sub-task</value>
		</label>
	</labels>
</definition>
